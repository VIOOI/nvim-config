
require('luasnip.loaders.from_vscode').lazy_load()
vim.opt.completeopt = {'menu', 'menuone', 'noselect'}

local cmp = require('cmp')
local luasnip = require('luasnip')

local select_opts = {behavior = cmp.SelectBehavior.Select}

local lsp_symbols = {
    Text = " Ôíû  ",
    Method = " Ôö¶ ",
    Function = " Ôûî ",
    Constructor = " Ôê• ",
    Field = " Ô¥≤ ",
    Variable = "[Óúñ]",
    Class = " Ô†ñ ",
    Interface = " Ô∞Æ ",
    Module = " Ôô® ",
    Property = " Ô™∂",
    Unit = " Ôëµ ",
    Value = " Ô¢ü ",
    Enum = " Ô©ó",
    Keyword = " Ô†ä ",
    Snippet = " ÔÉÑ ",
    Color = " Ô£ó ",
    File = " Ôúì ",
    Reference = " Ôúú ",
    Folder = " Ôùä ",
    EnumMember = " ÔÖù ",
    Constant = " Ô≤Ä ",
    Struct = " Ô≥§ ",
    Event = " ÔÉß ",
    Operator = " Ôó´ ",
    TypeParameter = " ÔûÉ ",
}

cmp.setup({
	snippet = {
		expand = function(args)
			luasnip.lsp_expand(args.body)
		end
	},
	sources = {
		{name = 'path'},
		-- {name = 'nvim_lsp', keyword_length = 3},
		{name = 'nvim_lsp'},
		{name = 'buffer'},
		{name = 'luasnip'},
		{ name = 'treesitter' },
		{ name = 'cmp-tw2css' },

	},
	formatting = {
		fields = {'menu', 'abbr', 'kind'},
		format = function(entry, item)
			item.kind = lsp_symbols[item.kind]
			local menu_icon = {
				nvim_lsp = 'Œª',
				luasnip = '‚ãó',
				buffer = 'Œ©',
				path = 'üñ´',
			}

			item.menu = menu_icon[entry.source.name]
			return item
		end,
	},
	mapping = {

		-- –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
		['<Up>'] = cmp.mapping.select_prev_item(select_opts), 
		['<Down>'] = cmp.mapping.select_next_item(select_opts),
		['<C-p>'] = cmp.mapping.select_prev_item(select_opts),
		['<C-n>'] = cmp.mapping.select_next_item(select_opts),

		-- –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤ –æ–∫–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏. 
		['<C-u>'] = cmp.mapping.scroll_docs(-4),
		['<C-f>'] = cmp.mapping.scroll_docs(4),

		-- –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ. 
		['<C-e>'] = cmp.mapping.abort(),

		-- –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä. 
		['<CR>'] = cmp.mapping.confirm({select = true}),

		-- –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—é –≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ. 
		['<C-d>'] = cmp.mapping(function(fallback)
			if luasnip.jumpable(1) then
				luasnip.jump(1)
			else
				fallback()
			end
		end, {'i', 's'}),

		-- –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—é –≤–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ. 
		['<C-b>'] = cmp.mapping(function(fallback)
			if luasnip.jumpable(-1) then
				luasnip.jump(-1)
			else
				fallback()
			end
		end, {'i', 's'}),

		-- –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –≤–∫–ª–∞–¥–∫–æ–π. 
		['<Tab>'] = cmp.mapping(function(fallback)
			local col = vim.fn.col('.') - 1

			if cmp.visible() then
				cmp.select_next_item(select_opts)
			elseif col == 0 or vim.fn.getline('.'):sub(col, col):match('%s') then
				fallback()
			else
				cmp.complete()
			end
		end, {'i', 's'}),

		-- –ï—Å–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –º–µ–Ω—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É. 
		['<S-Tab>'] = cmp.mapping(function(fallback)
			if cmp.visible() then
				cmp.select_prev_item(select_opts)
			else
				fallback()
			end
		end, {'i', 's'}),

	}

})
